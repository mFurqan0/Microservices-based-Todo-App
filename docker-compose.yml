version: "3.8"

services:
  db:
    image: postgres:latest
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: todo_db
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./backend/db_init.sql:/docker-entrypoint-initdb.d/db_init.sql
    networks:
      - todo-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d todo_db"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:alpine
    restart: always
    ports:
      - "6379:6379"
    networks:
      - todo-network

  backend:
    build:
      context: .
      dockerfile: Dockerfile.backend
    restart: always
    ports:
      - "5000:5000"
    environment:
      DB_HOST: db
      DB_NAME: todo_db
      DB_USER: user
      DB_PASS: password
      REDIS_HOST: redis
      REDIS_PORT: 6379
    networks:
      - todo-network
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: todo-frontend
    restart: always
    ports:
      - "3000:80"
    networks:
      - todo-network
    depends_on:
      backend:
        condition: service_healthy

networks:
  todo-network:
    driver: bridge

volumes:
  db-data:
